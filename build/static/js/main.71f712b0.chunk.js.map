{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","page","setpage","list","setlist","useEffect","axios","get","then","response","console","log","data","className","style","width","margin","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","src","avatar","alt","first_name","id","last_name","email","Stack","spacing","Pagination","count","color","onChange","event","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAkHeA,MAtFf,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KA2BA,OAvBAC,qBAAU,WACVC,IAAMC,IAAN,2CAA8CN,IAC7CO,MAAK,SAAUC,GAEhBC,QAAQC,IAAIF,GACV,IAAOG,EAAMH,EAASG,KAAfA,KACPF,QAAQC,IAAIC,GACZR,EAAQQ,QAEV,CAACX,IAeC,sBAAKY,UAAU,MAAf,UACE,+CAEA,qBAAKC,MAAO,CAACC,MAAM,MAAMC,OAAO,UAAhC,SACA,cAACC,EAAA,EAAD,CAAiBC,UAAWC,IAA5B,SACA,eAACC,EAAA,EAAD,CAAQ,aAAW,eAAnB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,gBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,EAAA,EAAD,UACGtB,EAAKuB,KAAI,SAACC,GAAD,OACR,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKU,MAAM,MAAhC,SACA,qBAAKf,UAAU,SAASgB,IAAKF,EAAIG,OAAQC,IAAKJ,EAAIK,eAElD,cAACT,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIM,KAC9B,cAACV,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIK,aAC9B,cAACT,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIO,YAC9B,cAACX,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIQ,UAPjBR,EAAIM,gBAczB,qBAAKpB,UAAU,OAAf,SAEN,cAACuB,EAAA,EAAD,CAAOC,QAAS,EAAhB,SAEA,cAACC,EAAA,EAAD,CAAYC,MAAO,EAAGC,MAAM,UACzBC,SA/Ce,SAACC,EAAMC,GACtBjC,QAAQC,IAAI+B,GACZhC,QAAQC,IAAIgC,GACZzC,EAAQyC,GACRjC,QAAQC,IAAIV,cCxCA2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71f712b0.chunk.js","sourcesContent":["\nimport './App.css';\nimport React,{useState,useEffect} from 'react';\nimport axios from 'axios'\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n//nmnmnm\n\n\n\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\n\n\n\n\n//https://reqres.in/api/users?page=2\n\n\n\n\nfunction App() {\n \n  const [page, setpage] = useState(1)\n  const [list, setlist] = useState([])\n\n  \n\n  useEffect(() => {\n  axios.get(`https://reqres.in/api/users?page=${page}`)\n  .then(function (response) {\n    \n  console.log(response);\n    const {data}=response.data\n    console.log(data)\n    setlist(data)\n  })\n},[page]);\n\n \n\n const pageChange=(event,value)=>{\n   console.log(event)\n   console.log(value)\n   setpage(value)\n   console.log(page)\n\n }\n \n  \n\n  return (\n    <div className=\"App\">\n      <h1>Users Details</h1>\n   \n      <div style={{width:\"80%\",margin:\"0 auto\"}}>\n      <TableContainer  component={Paper}>\n      <Table  aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Avatar</TableCell>\n            <TableCell align=\"right\">ID</TableCell>\n            <TableCell align=\"right\">First Name</TableCell>\n            <TableCell align=\"right\">Last Name</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n              <img className=\"avatar\" src={row.avatar} alt={row.first_name}/>\n              </TableCell>\n              <TableCell align=\"right\">{row.id}</TableCell>\n              <TableCell align=\"right\">{row.first_name}</TableCell>\n              <TableCell align=\"right\">{row.last_name}</TableCell>\n              <TableCell align=\"right\">{row.email}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      </div>\n      <div className=\"page\">\n\n<Stack spacing={2}>\n\n<Pagination count={2} color=\"primary\" \n   onChange={pageChange}\n/>\n\n</Stack>\n\n\n\n\n\n\n</div>\n       \n     \n    \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}